#!/bin/bash

# set -x

# get player status (Playing / Paused / Stopped / ...)
STATUS=$(playerctl status) 

# use given values or fall back to parameters from xresources
PLAYING_ICON=${icon:-$(xrescat i3xrocks.label.mediaplaying "")}
PAUSED_ICON=${icon:-$(xrescat i3xrocks.label.mediapaused "")}
LABEL_COLOR=${label_color:-$(xrescat i3xrocks.label.color "#7B8394")}
VALUE_COLOR=${color:-$(xrescat i3xrocks.value.color "#D8DEE9")}
VALUE_FONT=${font:-$(xrescat i3xrocks.value.font "Source Code Pro Medium 13")}

# assign the appropriate icon
#
# paused/stopped uses the same icon for simplicity
# exit with an empty blocklet if nothing is playing
case $STATUS in
  'Playing') ICON=${PLAYING_ICON} ;;
  'Paused') ICON=${PAUSED_ICON} ;;
  'Stopped') ICON=${PAUSED_ICON} ;;
  *) echo "" ; echo "" ; exit 0 ;;
esac

# get artist and title information
ARTIST="$(playerctl metadata artist | cut -c -20)"
TITLE="$(playerctl metadata title | cut -c -20)"

# print resulting information (fulltext)
if [ ! -z "$TITLE" ]; then
  echo "<span color=\"${LABEL_COLOR}\">${ICON}</span>\
<span font_desc=\"${VALUE_FONT}\" color=\"${VALUE_COLOR}\"> \
${ARTIST}-${TITLE}</span>"

  # for shorttext, only print the appropriate glyph
  echo $ICON
fi

# rudimentary controls via mouse clicks
#
# left click: send play/pause signal
# middle click: send previous title signal
# right click: send next title signal
case $BLOCK_BUTTON in
  1) playerctl play-pause ;;
  2) playerctl previous ;;
  3) playerctl next ;;
esac
exit 0
